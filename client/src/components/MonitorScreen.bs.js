// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Async from "../Async.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Monitor from "../Monitor.bs.js";
import * as $$Storage from "../Storage.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as ReactNative from "react-native";
import * as StateProvider from "../StateProvider.bs.js";

function reset(setAppState) {
  Async.then_(Async.then_($$Storage.resetBeacon(undefined), (function (param) {
              return $$Storage.resetUser(undefined);
            })), (function (param) {
          return Async.async(Curry._1(setAppState, (function (param) {
                            return /* Start */0;
                          })));
        }));
  
}

function MonitorScreen(Props) {
  var user = Props.user;
  var match = StateProvider.useContext(undefined);
  var setAppState = match[1];
  var match$1 = Monitor.useMonitor(user);
  var danger = match$1[1];
  var tmp;
  if (danger !== undefined) {
    var neighbor = danger[0];
    tmp = neighbor.citizen.id + " within " + String(neighbor.distanceInMeters) + " meter(s) is dangerous because of " + danger[1].name;
  } else {
    tmp = "No danger";
  }
  return React.createElement(React.Fragment, undefined, React.createElement(ReactNative.View, {
                  children: null
                }, React.createElement(ReactNative.Text, {
                      children: "Monitor"
                    }), React.createElement(ReactNative.Text, {
                      children: Belt_Option.getWithDefault(Belt_Option.map(match$1[0], (function (neighbors) {
                                  return String(neighbors.length) + " neighbors";
                                })), "No results yet")
                    }), React.createElement(ReactNative.Text, {
                      children: tmp
                    }), React.createElement(ReactNative.Button, {
                      onPress: (function (param) {
                          return reset(setAppState);
                        }),
                      title: "Reset"
                    })));
}

var make = MonitorScreen;

export {
  reset ,
  make ,
  
}
/* react Not a pure module */
