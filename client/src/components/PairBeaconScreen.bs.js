// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Async from "../Async.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as $$Storage from "../Storage.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as ReactNative from "react-native";
import * as BeaconScanner from "../BeaconScanner.bs.js";
import * as StateProvider from "../StateProvider.bs.js";

function PairBeaconScreen(Props) {
  var match = StateProvider.useContext(undefined);
  var setAppState = match[1];
  var appState = match[0];
  var match$1 = BeaconScanner.useScanner(undefined);
  var setScanning = match$1[2];
  var match$2 = React.useState(function () {
        
      });
  var setSelected = match$2[1];
  var selected = match$2[0];
  var saveBeacon = function (beacon) {
    return Async.then_($$Storage.saveBeacon(beacon), (function (param) {
                  var partial_arg = {
                    TAG: /* SaveBeacon */0,
                    _0: beacon
                  };
                  return Async.async(Curry._1(setAppState, (function (param) {
                                    return StateProvider.take(partial_arg, param);
                                  })));
                }));
  };
  React.useEffect((function () {
          Curry._1(setScanning, (function (param) {
                  return true;
                }));
          return (function (param) {
                    Curry._1(setScanning, (function (param) {
                            return false;
                          }));
                    
                  });
        }), []);
  var tmp;
  tmp = typeof appState === "number" ? (
      appState === /* ScanningBeacon */1 && Belt_Option.isSome(selected) ? React.createElement(ReactNative.View, {
              children: null
            }, React.createElement(ReactNative.Text, {
                  children: "Going to pair with " + Belt_Option.getWithDefault(Belt_Option.map(selected, (function (beacon) {
                              return beacon.id;
                            })), "")
                }), React.createElement(ReactNative.Button, {
                  onPress: (function (param) {
                      Belt_Option.map(selected, saveBeacon);
                      
                    }),
                  title: "Yes"
                }), React.createElement(ReactNative.Button, {
                  onPress: (function (param) {
                      return Curry._1(setSelected, (function (param) {
                                    
                                  }));
                    }),
                  title: "No"
                })) : null
    ) : (
      appState.TAG === /* BeaconSaved */2 ? React.createElement(ReactNative.View, {
              children: null
            }, React.createElement(ReactNative.Text, {
                  children: "Paired with " + appState._0.id
                }), React.createElement(ReactNative.Button, {
                  onPress: (function (param) {
                      return Curry._1(setAppState, (function (param) {
                                    return StateProvider.take(/* ConfirmBeaconSaved */1, param);
                                  }));
                    }),
                  title: "Proceed"
                })) : null
    );
  return React.createElement(React.Fragment, undefined, React.createElement(ReactNative.View, {
                  children: null
                }, React.createElement(ReactNative.Text, {
                      children: match$1[1] ? "Pairing beacon" : "Not scanning"
                    }), tmp, React.createElement(ReactNative.FlatList, {
                      data: match$1[0],
                      keyExtractor: (function (beacon, param) {
                          return beacon.id;
                        }),
                      renderItem: (function (param) {
                          var item = param.item;
                          return React.createElement(ReactNative.View, {
                                      children: null,
                                      key: item.id
                                    }, React.createElement(ReactNative.Text, {
                                          children: item.id,
                                          key: item.id
                                        }), React.createElement(ReactNative.Button, {
                                          onPress: (function (param) {
                                              return Curry._1(setSelected, (function (param) {
                                                            return item;
                                                          }));
                                            }),
                                          title: "Select"
                                        }));
                        })
                    })));
}

var make = PairBeaconScreen;

export {
  make ,
  
}
/* react Not a pure module */
