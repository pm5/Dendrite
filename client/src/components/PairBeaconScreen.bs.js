// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Logo from "./Logo.bs.js";
import * as Async from "../Async.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as $$Storage from "../Storage.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as ScreenStyle from "../styles/ScreenStyle.bs.js";
import * as ReactNative from "react-native";
import * as BeaconScanner from "../BeaconScanner.bs.js";
import * as StateProvider from "../StateProvider.bs.js";

var styles = ReactNative.StyleSheet.create({
      row: {
        flexDirection: "row",
        padding: 8
      },
      column: {
        flexDirection: "column",
        padding: 8
      },
      beacon: {
        flex: 5
      }
    });

function PairBeaconScreen$BeaconRow(Props) {
  var beacon = Props.beacon;
  var onSelect = Props.onSelect;
  return React.createElement(ReactNative.View, {
              style: styles.row,
              children: null,
              key: String(beacon.minor)
            }, React.createElement(ReactNative.Text, {
                  style: [
                    ScreenStyle.styles.text,
                    styles.beacon
                  ],
                  children: "Found " + String(beacon.minor)
                }), React.createElement(ReactNative.Button, {
                  onPress: onSelect,
                  title: "Pair"
                }));
}

var BeaconRow = {
  make: PairBeaconScreen$BeaconRow
};

function PairBeaconScreen(Props) {
  var match = StateProvider.useContext(undefined);
  var setAppState = match[1];
  var match$1 = BeaconScanner.useScanner(undefined);
  var setScanning = match$1[2];
  var match$2 = React.useState(function () {
        
      });
  var setSelected = match$2[1];
  var selected = match$2[0];
  var saveBeacon = function (beacon) {
    return Async.then_($$Storage.saveBeacon(beacon), (function (param) {
                  var partial_arg = {
                    TAG: /* SaveBeacon */0,
                    _0: beacon
                  };
                  return Async.async(Curry._1(setAppState, (function (param) {
                                    return StateProvider.take(partial_arg, param);
                                  })));
                }));
  };
  React.useEffect((function () {
          Curry._1(setScanning, (function (param) {
                  return true;
                }));
          return (function (param) {
                    Curry._1(setScanning, (function (param) {
                            return false;
                          }));
                    
                  });
        }), []);
  var tmp;
  var tmp$1 = match[0];
  tmp = typeof tmp$1 === "number" ? (
      tmp$1 === /* ScanningBeacon */1 ? (
          Belt_Option.isNone(selected) ? React.createElement(ReactNative.FlatList, {
                  data: match$1[0],
                  keyExtractor: (function (beacon, param) {
                      return String(beacon.minor);
                    }),
                  renderItem: (function (param) {
                      var item = param.item;
                      return React.createElement(PairBeaconScreen$BeaconRow, {
                                  beacon: item,
                                  onSelect: (function (param) {
                                      return Curry._1(setSelected, (function (param) {
                                                    return item;
                                                  }));
                                    })
                                });
                    })
                }) : (
              Belt_Option.isSome(selected) ? React.createElement(ReactNative.View, {
                      style: styles.column,
                      children: null
                    }, React.createElement(ReactNative.Text, {
                          style: ScreenStyle.styles.text,
                          children: "Pair with " + Belt_Option.getWithDefault(Belt_Option.map(selected, (function (beacon) {
                                      return String(beacon.minor);
                                    })), "")
                        }), React.createElement(ReactNative.View, {
                          style: {
                            flexDirection: "row"
                          },
                          children: null
                        }, React.createElement(ReactNative.Button, {
                              onPress: (function (param) {
                                  Belt_Option.map(selected, saveBeacon);
                                  
                                }),
                              title: "Yes"
                            }), React.createElement(ReactNative.Button, {
                              onPress: (function (param) {
                                  return Curry._1(setSelected, (function (param) {
                                                
                                              }));
                                }),
                              title: "No"
                            }))) : null
            )
        ) : null
    ) : (
      tmp$1.TAG === /* BeaconSaved */2 ? React.createElement(ReactNative.View, {
              children: React.createElement(ReactNative.Button, {
                    onPress: (function (param) {
                        return Curry._1(setAppState, (function (param) {
                                      return StateProvider.take(/* ConfirmBeaconSaved */1, param);
                                    }));
                      }),
                    title: "Proceed"
                  })
            }) : null
    );
  return React.createElement(ReactNative.View, {
              children: null
            }, React.createElement(Logo.make, {}), tmp);
}

var make = PairBeaconScreen;

export {
  styles ,
  BeaconRow ,
  make ,
  
}
/* styles Not a pure module */
