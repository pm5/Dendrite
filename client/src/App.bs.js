// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Async from "./Async.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as $$Storage from "./Storage.bs.js";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as ScreenStyle from "./styles/ScreenStyle.bs.js";
import * as StartScreen from "./components/StartScreen.bs.js";
import * as ReactNative from "react-native";
import * as MonitorScreen from "./components/MonitorScreen.bs.js";
import * as StateProvider from "./StateProvider.bs.js";
import * as LoadUserScreen from "./components/LoadUserScreen.bs.js";
import * as PairBeaconScreen from "./components/PairBeaconScreen.bs.js";
import * as NeedPermissionScreen from "./components/NeedPermissionScreen.bs.js";

function App$AppScreen(Props) {
  var match = React.useContext(StateProvider.stateContext);
  var state = match[0];
  if (typeof state === "number") {
    switch (state) {
      case /* NeedPermission */0 :
          return React.createElement(NeedPermissionScreen.make, {});
      case /* Start */1 :
          return React.createElement(StartScreen.make, {});
      default:
        return React.createElement(PairBeaconScreen.make, {});
    }
  } else {
    switch (state.TAG | 0) {
      case /* UserLoaded */1 :
      case /* LoadingUser */3 :
          break;
      case /* Monitoring */4 :
          return React.createElement(MonitorScreen.make, {
                      beacon: state._0,
                      user: state._1
                    });
      default:
        return React.createElement(PairBeaconScreen.make, {});
    }
  }
  return React.createElement(LoadUserScreen.make, {
              beacon: state._0
            });
}

var AppScreen = {
  make: App$AppScreen
};

function App$Root(Props) {
  var children = Props.children;
  return React.createElement(ReactNative.View, {
              style: ScreenStyle.styles.background,
              children: children
            });
}

var Root = {
  make: App$Root
};

function App$app(Props) {
  var match = React.useState(function () {
        return /* Start */1;
      });
  var setAppState = match[1];
  var appState = match[0];
  React.useEffect((function () {
          var acquirePermission = function (perm) {
            return Async.then_(ReactNative.PermissionsAndroid.check(perm), (function (permitted) {
                          if (permitted) {
                            return Async.async(permitted);
                          } else {
                            return Async.then_(ReactNative.PermissionsAndroid.request(perm), (function (result) {
                                          return Async.async(Caml_obj.caml_equal(result, ReactNative.PermissionsAndroid.RESULTS.GRANTED));
                                        }));
                          }
                        }));
          };
          Async.then_(acquirePermission(ReactNative.PermissionsAndroid.PERMISSIONS.ACCESS_COARSE_LOCATION), (function (gotit) {
                  if (!gotit) {
                    Curry._1(setAppState, (function (param) {
                            return /* NeedPermission */0;
                          }));
                  }
                  return Async.async(undefined);
                }));
          
        }), [appState]);
  React.useEffect((function () {
          if (typeof appState !== "number") {
            switch (appState.TAG | 0) {
              case /* BeaconPaired */0 :
                  Curry._1(setAppState, (function (param) {
                          return StateProvider.take(/* LoadUser */2, param);
                        }));
                  break;
              case /* UserLoaded */1 :
                  Curry._1(setAppState, (function (param) {
                          return StateProvider.take(/* StartMonitor */3, param);
                        }));
                  break;
              default:
                
            }
          }
          
        }), [appState]);
  React.useEffect((function () {
          Async.then_($$Storage.loadBeacon(undefined), (function (beacon) {
                  return Async.then_($$Storage.loadUser(undefined), (function (user) {
                                return Async.async(beacon !== undefined ? (
                                              user !== undefined ? Curry._1(setAppState, (function (param) {
                                                        return {
                                                                TAG: /* Monitoring */4,
                                                                _0: beacon,
                                                                _1: user
                                                              };
                                                      })) : Curry._1(setAppState, (function (param) {
                                                        return {
                                                                TAG: /* LoadingUser */3,
                                                                _0: beacon
                                                              };
                                                      }))
                                            ) : Curry._1(setAppState, (function (param) {
                                                    return /* Start */1;
                                                  })));
                              }));
                }));
          
        }), []);
  return React.createElement(App$Root, {
              children: React.createElement(StateProvider.make, StateProvider.makeProps([
                        appState,
                        setAppState
                      ], React.createElement(App$AppScreen, {}), undefined))
            });
}

var app = App$app;

export {
  AppScreen ,
  Root ,
  app ,
  
}
/* react Not a pure module */
