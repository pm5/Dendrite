// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Async from "./Async.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as $$Storage from "./Storage.bs.js";
import * as WarnScreen from "./components/WarnScreen.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as StartScreen from "./components/StartScreen.bs.js";
import * as MonitorScreen from "./components/MonitorScreen.bs.js";
import * as StateProvider from "./StateProvider.bs.js";
import * as LoadUserScreen from "./components/LoadUserScreen.bs.js";
import * as PairBeaconScreen from "./components/PairBeaconScreen.bs.js";

function App$AppScreen(Props) {
  var match = React.useContext(StateProvider.stateContext);
  var state = match[0];
  var tmp;
  var exit = 0;
  if (typeof state === "number") {
    switch (state) {
      case /* Start */0 :
          tmp = React.createElement(StartScreen.make, {});
          break;
      case /* NearbyUserDetected */2 :
      case /* QueryingUser */3 :
          throw {
                RE_EXN_ID: "Match_failure",
                _1: [
                  "App.res",
                  8,
                  7
                ],
                Error: new Error()
              };
      case /* WarningUser */4 :
          tmp = React.createElement(WarnScreen.make, {});
          break;
      default:
        tmp = React.createElement(PairBeaconScreen.make, {});
    }
  } else {
    switch (state.TAG | 0) {
      case /* UserLoaded */1 :
      case /* LoadingUser */3 :
          exit = 1;
          break;
      case /* Monitoring */4 :
          tmp = React.createElement(MonitorScreen.make, {
                beacon: state._0,
                user: state._1
              });
          break;
      default:
        tmp = React.createElement(PairBeaconScreen.make, {});
    }
  }
  if (exit === 1) {
    tmp = React.createElement(LoadUserScreen.make, {
          beacon: state._0
        });
  }
  return React.createElement(React.Fragment, undefined, tmp);
}

var AppScreen = {
  make: App$AppScreen
};

function App$app(Props) {
  var match = React.useState(function () {
        return /* Start */0;
      });
  var setAppState = match[1];
  var appState = match[0];
  Async.then_($$Storage.loadBeacon(undefined), (function (b) {
          return Async.async(Belt_Option.map(b, (function (beacon) {
                            console.log(beacon.id);
                            
                          })));
        }));
  React.useEffect((function () {
          if (typeof appState === "number") {
            if (appState === /* Start */0) {
              setTimeout((function (param) {
                      return Curry._1(setAppState, (function (param) {
                                    return StateProvider.take(/* PairBeacon */0, param);
                                  }));
                    }), 16000);
            }
            
          } else {
            switch (appState.TAG | 0) {
              case /* BeaconPaired */0 :
                  Curry._1(setAppState, (function (param) {
                          return StateProvider.take(/* LoadUser */2, param);
                        }));
                  break;
              case /* UserLoaded */1 :
                  Curry._1(setAppState, (function (param) {
                          return StateProvider.take(/* StartMonitor */3, param);
                        }));
                  break;
              default:
                
            }
          }
          
        }), [appState]);
  return React.createElement(React.Fragment, undefined, React.createElement(StateProvider.make, StateProvider.makeProps([
                      appState,
                      setAppState
                    ], React.createElement(App$AppScreen, {}), undefined)));
}

var app = App$app;

export {
  AppScreen ,
  app ,
  
}
/* react Not a pure module */
