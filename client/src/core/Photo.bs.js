// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Decco from "decco/src/Decco.bs.js";
import * as Js_dict from "bs-platform/lib/es6/js_dict.js";
import * as Js_json from "bs-platform/lib/es6/js_json.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";

function thumbnail_encode(v) {
  return Js_dict.fromArray([
              [
                "url",
                Decco.stringToJson(v.url)
              ],
              [
                "width",
                Decco.intToJson(v.width)
              ],
              [
                "height",
                Decco.intToJson(v.height)
              ]
            ]);
}

function thumbnail_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var url = Decco.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "url"), null));
  if (url.TAG === /* Ok */0) {
    var width = Decco.intFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "width"), null));
    if (width.TAG === /* Ok */0) {
      var height = Decco.intFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "height"), null));
      if (height.TAG === /* Ok */0) {
        return {
                TAG: /* Ok */0,
                _0: {
                  url: url._0,
                  width: width._0,
                  height: height._0
                }
              };
      }
      var e = height._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".height" + e.path,
                message: e.message,
                value: e.value
              }
            };
    }
    var e$1 = width._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".width" + e$1.path,
              message: e$1.message,
              value: e$1.value
            }
          };
  }
  var e$2 = url._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".url" + e$2.path,
            message: e$2.message,
            value: e$2.value
          }
        };
}

function t_encode(v) {
  return Js_dict.fromArray([
              [
                "id",
                Decco.stringToJson(v.id)
              ],
              [
                "url",
                Decco.stringToJson(v.url)
              ],
              [
                "size",
                Decco.intToJson(v.size)
              ],
              [
                "thumbnail",
                thumbnail_encode(v.thumbnail)
              ]
            ]);
}

function t_decode(v) {
  var dict = Js_json.classify(v);
  if (typeof dict === "number") {
    return Decco.error(undefined, "Not an object", v);
  }
  if (dict.TAG !== /* JSONObject */2) {
    return Decco.error(undefined, "Not an object", v);
  }
  var dict$1 = dict._0;
  var id = Decco.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "id"), null));
  if (id.TAG === /* Ok */0) {
    var url = Decco.stringFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "url"), null));
    if (url.TAG === /* Ok */0) {
      var size = Decco.intFromJson(Belt_Option.getWithDefault(Js_dict.get(dict$1, "size"), null));
      if (size.TAG === /* Ok */0) {
        var thumbnail = thumbnail_decode(Belt_Option.getWithDefault(Js_dict.get(dict$1, "thumbnail"), null));
        if (thumbnail.TAG === /* Ok */0) {
          return {
                  TAG: /* Ok */0,
                  _0: {
                    id: id._0,
                    url: url._0,
                    size: size._0,
                    thumbnail: thumbnail._0
                  }
                };
        }
        var e = thumbnail._0;
        return {
                TAG: /* Error */1,
                _0: {
                  path: ".thumbnail" + e.path,
                  message: e.message,
                  value: e.value
                }
              };
      }
      var e$1 = size._0;
      return {
              TAG: /* Error */1,
              _0: {
                path: ".size" + e$1.path,
                message: e$1.message,
                value: e$1.value
              }
            };
    }
    var e$2 = url._0;
    return {
            TAG: /* Error */1,
            _0: {
              path: ".url" + e$2.path,
              message: e$2.message,
              value: e$2.value
            }
          };
  }
  var e$3 = id._0;
  return {
          TAG: /* Error */1,
          _0: {
            path: ".id" + e$3.path,
            message: e$3.message,
            value: e$3.value
          }
        };
}

export {
  thumbnail_encode ,
  thumbnail_decode ,
  t_encode ,
  t_decode ,
  
}
/* No side effect */
