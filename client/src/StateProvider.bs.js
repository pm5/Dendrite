// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Pervasives from "bs-platform/lib/es6/pervasives.js";

var stateContext = React.createContext([
      /* Start */0,
      (function (param) {
          
        })
    ]);

function makeProps(value, children, param) {
  return {
          value: value,
          children: children
        };
}

var make = stateContext.Provider;

function useContext(param) {
  return React.useContext(stateContext);
}

function take(action, currentState) {
  if (typeof action === "number") {
    switch (action) {
      case /* PairBeacon */0 :
          if (typeof currentState === "number" && currentState === 0) {
            return /* ScanningBeacon */1;
          } else {
            return Pervasives.failwith("Invalid action at current state");
          }
      case /* ConfirmBeaconSaved */1 :
          if (typeof currentState === "number" || currentState.TAG !== /* BeaconSaved */2) {
            return Pervasives.failwith("Invalid action at current state");
          } else {
            return {
                    TAG: /* BeaconPaired */0,
                    _0: currentState._0
                  };
          }
      case /* LoadUser */2 :
          if (typeof currentState === "number" || currentState.TAG !== /* BeaconPaired */0) {
            return Pervasives.failwith("Invalid action at current state");
          } else {
            return {
                    TAG: /* LoadingUser */3,
                    _0: currentState._0
                  };
          }
      case /* StartMonitor */3 :
          if (typeof currentState === "number" || currentState.TAG !== /* UserLoaded */1) {
            return Pervasives.failwith("Invalid action at current state");
          } else {
            return {
                    TAG: /* Monitoring */4,
                    _0: currentState._0,
                    _1: currentState._1
                  };
          }
      
    }
  } else {
    switch (action.TAG | 0) {
      case /* SaveBeacon */0 :
          if (typeof currentState === "number" && currentState !== 0) {
            return {
                    TAG: /* BeaconSaved */2,
                    _0: action._0
                  };
          } else {
            return Pervasives.failwith("Invalid action at current state");
          }
      case /* SaveUser */1 :
          if (typeof currentState === "number" || currentState.TAG !== /* LoadingUser */3) {
            return Pervasives.failwith("Invalid action at current state");
          } else {
            return {
                    TAG: /* UserLoaded */1,
                    _0: currentState._0,
                    _1: action._0
                  };
          }
      case /* WarnUser */2 :
          if (typeof currentState === "number" || currentState.TAG !== /* Monitoring */4) {
            return Pervasives.failwith("Invalid action at current state");
          } else {
            return {
                    TAG: /* WarningUser */5,
                    _0: currentState._0,
                    _1: currentState._1,
                    _2: action._0,
                    _3: action._1
                  };
          }
      
    }
  }
}

export {
  stateContext ,
  makeProps ,
  make ,
  useContext ,
  take ,
  
}
/* stateContext Not a pure module */
