scalar DateTime

type Pathogen {
  name: ID!
  version: String!
  spreadDistanceInMeters: Float!
  spreadTimeInSeconds: Float!
  spreadRatio: Float!
}

type Antibody {
  name: ID!
  version: String!
  bindsTo: [Pathogen!]!
  expiresInSeconds: Float!
}

type Vaccine {
  name: ID!
  version: String!
  generates: Antibody!
  effectiveAfterSeconds: Float!
}

type Infection {
  pathogen: Pathogen!
  infectedAt: DateTime!
}

type Vaccination {
  vaccine: Vaccine!
  adminedAt: DateTime!
}

type Immunity {
  antibody: Antibody!
  expiresAt: DateTime!
}

type Thumbnail {
  url: String!
  width: Int!
  height: Int!
}

type Photo {
  id: ID!
  url: String!
  size: Int!
  thumbnail: Thumbnail!
}

type Citizen {
  id: ID!
  name: String!
  infections: [Infection!]!
  vaccinations: [Vaccination!]!
  immunities: [Immunity!]!
  photo: [Photo!]!
}

type Query {
  allCitizens: [Citizen!]!
  citizen(id: ID!): Citizen
  allPathogens: [Pathogen!]!
  allVaccines: [Vaccine!]!
  allAntibodies: [Antibody!]!
}

input Neighbor {
  citizen: ID!
  distanceInMeters: Float!
  measuredAt: DateTime!
}

type Mutation {
  reportDanger(citizen: ID!, neighbor: Neighbor!, pathogen: ID!): Citizen!
}
