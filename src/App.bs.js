// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as ReactNative from "react-native";
import * as ReactNativeEddystone from "@lg2/react-native-eddystone";
import * as NewAppScreen from "react-native/Libraries/NewAppScreen";
import * as OpenURLInBrowser from "react-native/Libraries/Core/Devtools/openURLInBrowser";

var Header = {};

var ReloadInstructions = {};

var LearnMoreLinks = {};

var DebugInstructions = {};

var styles = ReactNative.StyleSheet.create({
      scrollView: {
        backgroundColor: NewAppScreen.Colors.lighter
      },
      engine: {
        position: "absolute",
        right: 0
      },
      body: {
        backgroundColor: NewAppScreen.Colors.white
      },
      sectionContainer: {
        marginTop: 32,
        paddingHorizontal: 24
      },
      sectionTitle: {
        color: NewAppScreen.Colors.black,
        fontSize: 24,
        fontWeight: "600"
      },
      sectionDescription: {
        color: NewAppScreen.Colors.dark,
        fontSize: 18,
        fontWeight: "400",
        marginTop: 8
      },
      highlight: {
        fontWeight: "700"
      },
      footer: {
        color: NewAppScreen.Colors.dark,
        fontSize: 12,
        fontWeight: "600",
        textAlign: "right",
        padding: 4,
        paddingRight: 12
      }
    });

function App$Greeting(Props) {
  var name = Props.name;
  var match = React.useState(function () {
        return 0;
      });
  var setCount = match[1];
  var count = match[0];
  var match$1 = React.useState(function () {
        return name;
      });
  var setUserName = match$1[1];
  var userName = match$1[0];
  return React.createElement(ReactNative.View, {
              style: styles.sectionContainer,
              children: null
            }, React.createElement(ReactNative.TextInput, {
                  defaultValue: userName,
                  onChangeText: (function (text) {
                      return Curry._1(setUserName, (function (param) {
                                    return text;
                                  }));
                    }),
                  style: styles.sectionDescription
                }), React.createElement(ReactNative.Text, {
                  style: styles.sectionDescription,
                  children: "Hello, " + userName + ".  You have clicked " + String(count) + " times."
                }), React.createElement(ReactNative.Button, {
                  onPress: (function (_event) {
                      return Curry._1(setCount, (function (param) {
                                    return count + 1 | 0;
                                  }));
                    }),
                  title: "Click me"
                }));
}

var Greeting = {
  make: App$Greeting
};

function App$LotsOfGreetings(Props) {
  return React.createElement(ReactNative.FlatList, {
              data: [
                {
                  name: "Devin"
                },
                {
                  name: "Dan"
                },
                {
                  name: "Dominic"
                },
                {
                  name: "Jackson"
                },
                {
                  name: "James"
                },
                {
                  name: "Joel"
                },
                {
                  name: "Jane"
                },
                {
                  name: "John"
                },
                {
                  name: "Jillion"
                }
              ],
              keyExtractor: (function (item, param) {
                  return item.name;
                }),
              renderItem: (function (param) {
                  return React.createElement(App$Greeting, {
                              name: param.item.name
                            });
                })
            });
}

var LotsOfGreetings = {
  make: App$LotsOfGreetings
};

function App$Movies(Props) {
  var match = React.useState(function () {
        return [];
      });
  var setMovies = match[1];
  var match$1 = React.useState(function () {
        return true;
      });
  var setLoading = match$1[1];
  var loading = match$1[0];
  React.useEffect((function () {
          fetch("https://reactnative.dev/movies.json").then(function (prim) {
                      return prim.text();
                    }).then(function (text) {
                    return Promise.resolve(JSON.parse(text));
                  }).then(function (moviesData) {
                  Curry._1(setMovies, (function (param) {
                          return moviesData.movies;
                        }));
                  Curry._1(setLoading, (function (param) {
                          return false;
                        }));
                  return Promise.resolve(undefined);
                }).catch(function (error) {
                return Promise.resolve((console.log(error), undefined));
              });
          return (function (param) {
                    
                  });
        }), [loading]);
  if (loading) {
    return React.createElement(ReactNative.View, {
                style: styles.sectionContainer,
                children: React.createElement(ReactNative.Text, {
                      children: "LOADING..."
                    })
              });
  } else {
    return React.createElement(ReactNative.View, {
                style: styles.sectionContainer,
                children: null
              }, React.createElement(ReactNative.FlatList, {
                    data: match[0],
                    keyExtractor: (function (item, param) {
                        return item.id;
                      }),
                    renderItem: (function (param) {
                        var item = param.item;
                        return React.createElement(ReactNative.View, {
                                    children: null
                                  }, React.createElement(ReactNative.Text, {
                                        children: item.id
                                      }), React.createElement(ReactNative.Text, {
                                        children: item.title
                                      }), React.createElement(ReactNative.Text, {
                                        children: item.releaseYear
                                      }));
                      })
                  }), React.createElement(ReactNative.Button, {
                    onPress: (function (_event) {
                        return Curry._1(setLoading, (function (param) {
                                      return true;
                                    }));
                      }),
                    title: "Reload"
                  }));
  }
}

var Movies = {
  make: App$Movies
};

function App$app(Props) {
  var logger = function (url) {
    console.log(url.url);
    
  };
  ReactNativeEddystone.default.addListener("onURLFrame", logger);
  ReactNativeEddystone.default.startScanning();
  ReactNativeEddystone.default.stopScanning();
  ReactNativeEddystone.default.removeListener("onURLFrame", logger);
  return React.createElement(React.Fragment, undefined, React.createElement(ReactNative.StatusBar, {
                  barStyle: "dark-content"
                }), React.createElement(ReactNative.SafeAreaView, {
                  children: React.createElement(ReactNative.ScrollView, {
                        contentInsetAdjustmentBehavior: "automatic",
                        style: styles.scrollView,
                        children: null
                      }, Belt_Option.isNone(global.HermesInternal) ? null : React.createElement(ReactNative.View, {
                              style: styles.engine,
                              children: React.createElement(ReactNative.Text, {
                                    style: styles.footer,
                                    children: "Engine: Hermes"
                                  })
                            }), React.createElement(NewAppScreen.Header, {}), React.createElement(ReactNative.View, {
                            style: styles.body,
                            children: null
                          }, React.createElement(App$Movies, {}), React.createElement(App$Greeting, {
                                name: "pm5"
                              }), React.createElement(ReactNative.View, {
                                style: styles.sectionContainer,
                                children: null
                              }, React.createElement(ReactNative.Text, {
                                    style: styles.sectionTitle,
                                    children: "Step One"
                                  }), React.createElement(ReactNative.Text, {
                                    style: styles.sectionDescription,
                                    children: null
                                  }, "Edit ", React.createElement(ReactNative.Text, {
                                        style: styles.highlight,
                                        children: "src/App.re"
                                      }), " to change this screen and then come back to see your edits.")), React.createElement(ReactNative.View, {
                                style: styles.sectionContainer,
                                children: null
                              }, React.createElement(ReactNative.Text, {
                                    style: styles.sectionTitle,
                                    children: "See Your Changes"
                                  }), React.createElement(ReactNative.Text, {
                                    style: styles.sectionDescription,
                                    children: React.createElement(NewAppScreen.ReloadInstructions, {})
                                  })), React.createElement(ReactNative.View, {
                                style: styles.sectionContainer,
                                children: null
                              }, React.createElement(ReactNative.Text, {
                                    style: styles.sectionTitle,
                                    children: "Debug"
                                  }), React.createElement(ReactNative.Text, {
                                    style: styles.sectionDescription,
                                    children: React.createElement(NewAppScreen.DebugInstructions, {})
                                  })), React.createElement(ReactNative.View, {
                                style: styles.sectionContainer,
                                children: null
                              }, React.createElement(ReactNative.Text, {
                                    style: styles.sectionTitle,
                                    children: "Learn More"
                                  }), React.createElement(ReactNative.Text, {
                                    style: styles.sectionDescription,
                                    children: "Read the docs to discover what to do next:"
                                  })), React.createElement(ReactNative.View, {
                                style: styles.sectionContainer,
                                children: null
                              }, React.createElement(ReactNative.Text, {
                                    style: styles.sectionDescription,
                                    children: React.createElement(ReactNative.Text, {
                                          style: styles.highlight,
                                          children: "Reason React Native"
                                        })
                                  }), React.createElement(ReactNative.TouchableOpacity, {
                                    onPress: (function (param) {
                                        OpenURLInBrowser.default("https://reason-react-native.github.io/en/docs/");
                                        
                                      }),
                                    children: React.createElement(ReactNative.Text, {
                                          style: {
                                            color: NewAppScreen.Colors.primary,
                                            fontSize: 18,
                                            fontWeight: "400",
                                            marginTop: 8
                                          },
                                          children: "https://reason-react-native.github.io/"
                                        })
                                  })), React.createElement(ReactNative.View, {
                                style: styles.sectionContainer,
                                children: React.createElement(ReactNative.Text, {
                                      style: styles.sectionDescription,
                                      children: React.createElement(ReactNative.Text, {
                                            style: styles.highlight,
                                            children: "React Native"
                                          })
                                    })
                              }), React.createElement(NewAppScreen.LearnMoreLinks, {})))
                }));
}

var app = App$app;

export {
  Header ,
  ReloadInstructions ,
  LearnMoreLinks ,
  DebugInstructions ,
  styles ,
  Greeting ,
  LotsOfGreetings ,
  Movies ,
  app ,
  
}
/* styles Not a pure module */
